// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package networkmock is a generated GoMock package.
package networkmock

import (
	context "context"
	http "net/http"
	reflect "reflect"
	network "yanm/internal/network"

	gomock "github.com/golang/mock/gomock"
)

// MockSpeedTester is a mock of SpeedTester interface.
type MockSpeedTester struct {
	ctrl     *gomock.Controller
	recorder *MockSpeedTesterMockRecorder
}

// MockSpeedTesterMockRecorder is the mock recorder for MockSpeedTester.
type MockSpeedTesterMockRecorder struct {
	mock *MockSpeedTester
}

// NewMockSpeedTester creates a new mock instance.
func NewMockSpeedTester(ctrl *gomock.Controller) *MockSpeedTester {
	mock := &MockSpeedTester{ctrl: ctrl}
	mock.recorder = &MockSpeedTesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpeedTester) EXPECT() *MockSpeedTesterMockRecorder {
	return m.recorder
}

// Debug mocks base method.
func (m *MockSpeedTester) Debug() http.Handler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Debug")
	ret0, _ := ret[0].(http.Handler)
	return ret0
}

// Debug indicates an expected call of Debug.
func (mr *MockSpeedTesterMockRecorder) Debug() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Debug", reflect.TypeOf((*MockSpeedTester)(nil).Debug))
}

// PerformPingTest mocks base method.
func (m *MockSpeedTester) PerformPingTest(ctx context.Context) (*network.PingResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PerformPingTest", ctx)
	ret0, _ := ret[0].(*network.PingResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PerformPingTest indicates an expected call of PerformPingTest.
func (mr *MockSpeedTesterMockRecorder) PerformPingTest(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PerformPingTest", reflect.TypeOf((*MockSpeedTester)(nil).PerformPingTest), ctx)
}

// PerformSpeedTest mocks base method.
func (m *MockSpeedTester) PerformSpeedTest(ctx context.Context) (*network.PerformanceResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PerformSpeedTest", ctx)
	ret0, _ := ret[0].(*network.PerformanceResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PerformSpeedTest indicates an expected call of PerformSpeedTest.
func (mr *MockSpeedTesterMockRecorder) PerformSpeedTest(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PerformSpeedTest", reflect.TypeOf((*MockSpeedTester)(nil).PerformSpeedTest), ctx)
}
